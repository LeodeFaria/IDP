# -*- coding: utf-8 -*-
"""4 Aula - Carregando dados.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/LeodeFaria/IDP/blob/main/4%20Aula%20-%20Carregando%20dados%20-%20Segunda%20tentativa.ipynb
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd

# %load_ext google.colab.data_table

#!pip install unidecode

from unidecode import unidecode

# from google.colab import drive
# drive.mount('/content/drive')

#df2 = pd.read_csv('./files/pasta1.csv',
#                delimiter=';', decimal=',',encoding='utf8')

senado = pd.read_csv('/Users/leodefaria/Documents/IDP/GIT-IDP/files/SF_ConsultaRemuneracaoServidoresParlamentares_202103.csv',
                delimiter=';', decimal=',',encoding='ISO-8859-1')

#senado = pd.read_csv('/content/drive/MyDrive/IDP -BigData/SF_ConsultaRemuneracaoServidoresParlamentares_202103.csv',
#                delimiter=';', decimal=',',encoding='ISO-8859-1')

senado

# df inicial
senado = senado[['LOTAÇÃO EXERCÍCIO','REM_LIQUIDA','CATEGORIA']]

senado2.to_csv('/Users/leodefaria/Documents/IDP/GIT-IDP/files/SF_Teste.csv')

senado2 = senado[senado['LOTAÇÃO EXERCÍCIO'].str.contains('Senador')]

senado3 = senado.dropna()

senado['LOTAÇÃO EXERCÍCIO'] = senado['LOTAÇÃO EXERCÍCIO'].str.lower()

senado['LOTAÇÃO EXERCÍCIO'] = senado['LOTAÇÃO EXERCÍCIO'].str.replace('senadora','senador')

senado['LOTAÇÃO EXERCÍCIO'] = senado['LOTAÇÃO EXERCÍCIO'].replace(to_replace=r'^.*?senador', value='', regex=True)

senado['LOTAÇÃO EXERCÍCIO'] = senado['LOTAÇÃO EXERCÍCIO'].apply(unidecode)

senado = senado.dropna()
# senado

# Sem senador
lotacaoSemParlamentar = senado[~senado['CATEGORIA'].str.contains('PARLAMENTAR')]

lotacaoSemParlamentar = lotacaoSemParlamentar.dropna()

# Só Senador
lotacaoSenador = senado[['LOTAÇÃO EXERCÍCIO','REM_LIQUIDA','CATEGORIA']]

lotacaoSenador['LOTAÇÃO EXERCÍCIO'] = lotacaoSenador[lotacaoSenador['CATEGORIA'].str.match('PARLAMENTAR')]

lotacaoSenador = lotacaoSenador.dropna()

senado_final = senado[['LOTAÇÃO EXERCÍCIO','REM_LIQUIDA']]

senado_final_servidores = senado_final.groupby('LOTAÇÃO EXERCÍCIO').count()

senado_final = senado_final.groupby('LOTAÇÃO EXERCÍCIO').sum()

senado_final['Qtd_servidores'] = senado_final_servidores

senado_final.sort_values('REM_LIQUIDA',ascending=False)

# consolidado = senado[['VÍNCULO','REM_LIQUIDA']].groupby('VÍNCULO').count()
# consolidado.rename(columns = {'REM_LIQUIDA' : 'TOTAL_VINCULO'}, inplace = True)
# consolidado['PORCENTAGEM_VINCULO'] = ((consolidado['TOTAL_VINCULO']/consolidado['TOTAL_VINCULO'].sum())*100).round(2).astype(str) + '%'
# consolidado['REM_LIQUIDA_TOTAL'] = senado[['VÍNCULO','REM_LIQUIDA']].groupby('VÍNCULO').sum()['REM_LIQUIDA'].round(2)
# consolidado['PORCENTAGEM_REM_LIQUIDA'] = ((consolidado['REM_LIQUIDA_TOTAL']/consolidado['REM_LIQUIDA_TOTAL'].sum())*100).round(2).astype(str) + '%'
# consolidado

# categoria = senado[['CATEGORIA','REM_LIQUIDA']]

# a = categoria.groupby('CATEGORIA').sum()
# a['Qtd_SERIDORES'] = categoria.groupby('CATEGORIA').count()
# a['Pct_SERIDORES'] = ((a['Qtd_SERIDORES']/a['Qtd_SERIDORES'].sum())*100).round(2).astype(str) + '%'
# a['Pct_GASTO']     = ((a['REM_LIQUIDA']/a['REM_LIQUIDA'].sum())*100).round(2).astype(str) + '%'
# a
# # Queria a linha de total